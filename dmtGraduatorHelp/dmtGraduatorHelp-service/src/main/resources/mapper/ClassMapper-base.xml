<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!--
    作者:张晗-十一期
    版本号:V1.0
    功能:基本的增删改查(不含分页版)
-->
<mapper namespace="com.dmsdbj.itoo.demo.dao.ClassDao">
    <resultMap id="BaseResultMap" type="com.dmsdbj.itoo.demo.entity.ClassEntity">

        <result column="id" property="id" jdbcType="VARCHAR"/>

        <result column="operator" property="operator" jdbcType="VARCHAR"/>

        <result column="is_delete" property="isDelete" jdbcType="TINYINT"/>

        <result column="remark" property="remark" jdbcType="VARCHAR"/>

        <result column="class_code" property="classCode" jdbcType="VARCHAR"/>

        <result column="class_name" property="className" jdbcType="VARCHAR"/>

        <result column="grade" property="grade" jdbcType="VARCHAR"/>

        <result column="profession_id" property="professionId" jdbcType="VARCHAR"/>

        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>

        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>

        <!--<result column="school_branch_id" property="schoolBranchId" jdbcType="VARCHAR" />    -->

    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id,
        operator,
        is_delete,
        remark,
        class_code,
        class_name,
        grade,
        profession_id,
        create_time,
        update_time
    </sql>
    <select id="getCountByExample" parameterType="com.dmsdbj.itoo.demo.mybatisexample.ClassExample"
            resultType="java.lang.Long">
        select count(*) from t_class
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="findById" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_class
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <select id="selectByExample" parameterType="com.dmsdbj.itoo.demo.mybatisexample.ClassExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_class
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <insert id="insertForce" parameterType="com.dmsdbj.itoo.demo.entity.ClassEntity">
        insert into t_class (
        id,
        operator,
        is_delete,
        remark,
        class_code,
        class_name,
        grade,
        profession_id,
        create_time,
        update_time)
        values (
        #{id,jdbcType=VARCHAR},
        #{operator,jdbcType=VARCHAR},
        #{isDelete,jdbcType=TINYINT},
        #{remark,jdbcType=VARCHAR},
        #{classCode,jdbcType=VARCHAR},
        #{className,jdbcType=VARCHAR},
        #{grade,jdbcType=VARCHAR},
        #{professionId,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insert" parameterType="com.dmsdbj.itoo.demo.entity.ClassEntity">
        insert into t_class
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="operator != null">
                operator,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="classCode != null">
                class_code,
            </if>
            <if test="className != null">
                class_name,
            </if>
            <if test="grade != null">
                grade,
            </if>
            <if test="professionId != null">
                profession_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <!--<if test="schoolBranchId != null">-->
            <!--school_branch_id,-->
            <!--</if>           -->
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="operator != null">
                #{operator,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=TINYINT},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="classCode != null">
                #{classCode,jdbcType=VARCHAR},
            </if>
            <if test="className != null">
                #{className,jdbcType=VARCHAR},
            </if>
            <if test="grade != null">
                #{grade,jdbcType=VARCHAR},
            </if>
            <if test="professionId != null">
                #{professionId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <!--<if test="schoolBranchId != null">-->
            <!--#{schoolBranchId,jdbcType=VARCHAR},-->
            <!--</if>           -->
        </trim>
    </insert>
    <delete id="deleteById" parameterType="java.lang.String">
        update t_class set is_delete = 1
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.dmsdbj.itoo.demo.mybatisexample.ClassExample">
        update t_class set is_delete = 1
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <update id="updateById" parameterType="com.dmsdbj.itoo.demo.entity.ClassEntity">
        update t_class
        <set>
            <if test="operator != null">
                operator = #{operator,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=TINYINT},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="classCode != null">
                class_code = #{classCode,jdbcType=VARCHAR},
            </if>
            <if test="className != null">
                class_name = #{className,jdbcType=VARCHAR},
            </if>
            <if test="grade != null">
                grade = #{grade,jdbcType=VARCHAR},
            </if>
            <if test="professionId != null">
                profession_id = #{professionId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <!--<if test="schoolBranchId != null">-->
            <!--school_branch_id = #{schoolBranchId,jdbcType=VARCHAR},-->
            <!--</if>-->
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateForceById" parameterType="com.dmsdbj.itoo.demo.entity.ClassEntity">
        update t_class
        set
        operator = #{operator,jdbcType=VARCHAR},
        is_delete = #{isDelete,jdbcType=TINYINT},
        remark = #{remark,jdbcType=VARCHAR},
        class_code = #{classCode,jdbcType=VARCHAR},
        class_name = #{className,jdbcType=VARCHAR},
        grade = #{grade,jdbcType=VARCHAR},
        profession_id = #{professionId,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
    </update>
    <update id="updateByExample" parameterType="map">
        update t_class
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.operator != null">
                operator = #{record.operator,jdbcType=VARCHAR},
            </if>
            <if test="record.isDelete != null">
                is_delete = #{record.isDelete,jdbcType=TINYINT},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.classCode != null">
                class_code = #{record.classCode,jdbcType=VARCHAR},
            </if>
            <if test="record.className != null">
                class_name = #{record.className,jdbcType=VARCHAR},
            </if>
            <if test="record.grade != null">
                grade = #{record.grade,jdbcType=VARCHAR},
            </if>
            <if test="record.professionId != null">
                profession_id = #{record.professionId,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <!--<if test="record.schoolBranchId != null">-->
            <!--school_branch_id = #{record.schoolBranchId,jdbcType=VARCHAR},-->
            <!--</if>           -->
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateForceByExample" parameterType="map">
        update t_class
        set
        id = #{record.id,jdbcType=VARCHAR},
        operator = #{record.operator,jdbcType=VARCHAR},
        is_delete = #{record.isDelete,jdbcType=TINYINT},
        remark = #{record.remark,jdbcType=VARCHAR},
        class_code = #{record.classCode,jdbcType=VARCHAR},
        class_name = #{record.className,jdbcType=VARCHAR},
        grade = #{record.grade,jdbcType=VARCHAR},
        profession_id = #{record.professionId,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
</mapper>